#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>


sem_t s;

void *prime() 
{
    int i, j, count = 0;
    for(i = 2; i < 1000000; i++)
    {
        for(j = 2;j < i; j++)
        {
            if(i % j == 0)
            {
                ++count;
            }
            if(count == 1)
            {
                sem_wait(&s);
                printf("%d ", i);
                sem_post(&s);
            }
        }
    }
    printf("\n");
}

void *fibon() 
{
    int a = 0, b = 1, c = 0;
    c = a + b;
    while (c <= 1000000)
    {
        sem_wait(&s);
        printf("%d ", c);
        sem_post(&s);
        a = b;
        b = c;
        c = a + b;
    }
    printf("\n");
}

int main() 
{   
    sem_init(&s, 0, 1);

    pthread_t prime, fibon;
    pthread_create(&prime, NULL, prime, NULL);
    pthread_create(&fibon, NULL, fibon, NULL);
    pthread_join(prime, NULL);
    pthread_join(fibon, NULL);

    sem_destroy(&s);
    printf("\n");
    return 0;
}